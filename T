// ==UserScript==
// @name         login ISS LONDRINA
// @namespace    X
// @version      1
// @description  ENTRAR NA DMS
// @author       X
// @match        https://iss.londrina.pr.gov.br/*
// @grant        GM_xmlhttpRequest
// @connect      api.ocr.space
// @run-at       document-end
// ==/UserScript==

(function() {
    'use strict';

    const ocrApiKey = "K88005990488957"; // ðŸ‘‰ Use sua prÃ³pria chave da OCR.space
    const imageUrl = "https://iss.londrina.pr.gov.br/images/imagem.php";

    // ============================
    // Parte 1: Preenchimento Login
    // ============================
    function preencherCamposLogin() {
        const crcInput = document.querySelector('input[name="crc"]');
        if (crcInput && crcInput.value === "") {
            crcInput.value = '123'; // Altere para seu valor real
        }

        const senhaInput = document.querySelector('input[name="senha"]');
        if (senhaInput && senhaInput.value === "") {
            senhaInput.value = '123'; // Altere para seu valor real
        }

        const estadoSelect = document.querySelector('select[name="estado"]');
        if (estadoSelect && estadoSelect.value !== 'PR') {
            estadoSelect.value = 'PR';
            const event = new Event('change', { bubbles: true });
            estadoSelect.dispatchEvent(event);
        }
    }

    const intervaloLogin = setInterval(() => {
        const crc = document.querySelector('input[name="crc"]');
        const senha = document.querySelector('input[name="senha"]');
        const estado = document.querySelector('select[name="estado"]');

        if (crc && senha && estado) {
            preencherCamposLogin();
            clearInterval(intervaloLogin);
        }
    }, 1000);

    // ============================
    // Parte 2: ResoluÃ§Ã£o CAPTCHA
    // ============================
    function toDataUrl(url, callback) {
        const xhr = new XMLHttpRequest();
        xhr.onload = function () {
            const reader = new FileReader();
            reader.onloadend = function () {
                callback(reader.result);
            };
            reader.readAsDataURL(xhr.response);
        };
        xhr.open('GET', url);
        xhr.responseType = 'blob';
        xhr.send();
    }

    function enviarParaOCR(base64img) {
        GM_xmlhttpRequest({
            method: "POST",
            url: "https://api.ocr.space/parse/image",
            headers: {
                "apikey": ocrApiKey,
                "Content-Type": "application/x-www-form-urlencoded"
            },
            data: `base64Image=${encodeURIComponent(base64img)}&language=eng&scale=true&OCREngine=2`,
            onload: function (response) {
                try {
                    const result = JSON.parse(response.responseText);
                    const text = result.ParsedResults[0].ParsedText.replace(/\D/g, '').substring(0, 4);
                    preencherCampoCaptcha(text);
                } catch (e) {
                    console.error("Erro ao processar OCR:", e);
                }
            }
        });
    }

    function preencherCampoCaptcha(codigo) {
        const tentaCampo = setInterval(() => {
            const input = document.querySelector('#confirma');
            if (input) {
                clearInterval(tentaCampo);
                input.value = codigo;
                const evt = new KeyboardEvent('keyup', { bubbles: true });
                input.dispatchEvent(evt);
                console.log("âœ… CAPTCHA preenchido automaticamente:", codigo);
            }
        }, 30);
    }

    // Inicia OCR apÃ³s pequeno delay para garantir que a imagem do captcha carregue
    setTimeout(() => {
        toDataUrl(imageUrl, function (base64) {
            enviarParaOCR(base64);
        });
    }, 30);

})();
